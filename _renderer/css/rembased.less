// rembased.less
// Core of the rem based design
// http://rembased.pravdomil.cz

// Reset margin, padding, border, font
// You can add more elements that you want to reset
html, body,
h1, h2, h3, h4, h5, h6,
p, pre, kbd, blockquote,
img, iframe, hr,
ul, ol,
table,
figure,
form, input, button, keygen, textarea, select, label, fieldset
{ padding: 0; margin: 0; border: 0; font: inherit; }

// HTML5 new elements in older browsers
main, header, footer, aside, nav, section, article, page { display: block; }

// Configuration defaults
.config-defaults() {
	// <body> font-size
	@fontSize: 8pt;
	
	// <body> line-height
	@lineHeight: 1.3;
	
	// just for debugging baseline, see @offset
	// fonts have different baselines
	@fontBaseline: 1/3;
	
	// scaling factor
	// good values - desktop 1.182 - mobile 1.218
	// important to achieve correct PT to PX conversion
	// for example MacBook has 113.5 DPI instead of browser default 96
	@dpiScale: 113.5 / 96;
	
	// default margin size
	// used for all block elements margin-bottom 
	@blockMargin: 1rem;
	
	// see .mobile and .desktop mixins
	// btw iPad has 768px screen width
	@mobileBreak: 750px; 
	
	// max width for .column-width-grid, see .column-system
	@gridMaxWidth: 10rem;
	
	// secondary background color
	// table even rows and future purposes
	@secondaryBackground: rgba(0, 0, 0, .05)
};
.config-defaults();


// Font-size = @em
@em: round( convert(@fontSize * @dpiScale, px) );

// Line-height = @rem = 1rem
@rem: round(@em * @lineHeight);

// Font baseline = (1rem - @offset)
@offset: @rem * .5 - @em * @fontBaseline;


// Base layout
html {
	// define 1rem here
	font-size: @rem;
	
	// disable zoom efect in landspace on iOS
	-webkit-text-size-adjust: 100%;
}
body {
	// define font-size here
	font-size: @em;
	
	// line height is 1rem
	line-height: 1rem;
}


// Dereset
// set line-height 0 for not affecting line-height
b, strong { font-weight: bold; }
cite, em, i { font-style: italic; }
pre { font-family: monospace; }
a { cursor: pointer; color: inherit; text-decoration: inherit; }

sub { font-size: 0.8em; line-height: 0; }
sup { font-size: 0.8em; line-height: 0; }

// these mixins you can use later on
// for bigger and smaller inline elements set smaller line-height
.big() { font-size: 1.2em; line-height: calc(~"1/1.2"); }
.small() { font-size: 0.8em; line-height: 1; }
.kbd() { padding: 0 .2em; color: #fff; background-color: #333; border-radius: .25em; }

big { .big; }
small { .small; }
kbd:not(:empty) { .kbd; }

// Headings
h1 { font-size: @em * 1.5; line-height: 2rem; }
h2 { font-size: @em * 1.3; }
h3 { font-size: @em * 1.1; }
// http://aestheticallyloyal.com/public/optimize-legibility/
h1, h2, h3 { text-rendering: optimizeLegibility; }


// margin-bottom for block elements
.block-elem(@rule) { p, h1, h2, h3, ul, ol, table, pre, iframe { @rule(); } }
.block-elem({ margin-bottom: @blockMargin; });


// <hr>
.hr(@w: 1px; @c: #000) {
	display: block; clear: both; height: 1rem;
	
	// we need line at specific y so use image
	@img: escape('<svg width="1" height="@{w}" xmlns="http://www.w3.org/2000/svg"><rect x="0" y="0" fill="@{c}" width="1" height="@{w}"/></svg>');
	background: url("data:image/svg+xml;charset=utf-8,@{img}") center (@rem / 2 - @w) repeat-x;
}
hr { .hr; }


// Bullet lists
.list(@padding: 1rem) {
	// indent
	padding-left: @padding;
	
	// no block margin in nested lists
	ul, ol { margin-bottom: 0; }
	
	// p followed by .list has no margin in between
	p + & { margin-top: @blockMargin * -1; }
}
ul, ol {
	// when list is not plain do not show bullets
	&[class], &[id] { list-style-type: none; }
	
	// when .list is plain (with no id or class) apply .list
	&:not([class]):not([id]) { .list; }
}


// <table>
.table(@padding: 0.5rem; @even: @secondaryBackground) {
	// aka border-collapse
	border-spacing: 0;
	
	// can be redefined
	width: 100%;
	
	// typography
	font-size: @em * 0.9;
	
	// thead in bold
	> thead { font-weight: bold; }
	
	// Different background for even rows
	> tbody > tr:nth-child(odd) { td, th { background-color: @even; } }
	
	td, th {
		// vertical align of cell is top
		vertical-align: top;
		
		// reset align left for thead
		text-align: left;
		
		// cell padding top and bottom
		&:before { content: ""; display: block; margin-top: @padding; }
		&:after { content: ""; display: block; margin-top: @padding; }
		
		// cell padding, equally divided to left and right side
		padding: 0 @padding / 2;
		
		// first and last cells have more left and right padding
		// empirically tested
		&:first-child { padding-left: @padding * 1.25; }
		&:last-child { padding-right: @padding * 1.25; }
	}
}
table:not([class]) { .table; }


// Column system
// empirically tested
.column-system(@margin: @blockMargin; @selector: ~'> *') {
	// flex setup
	.doflex(@margin; @selector);
	flex-wrap: wrap;
	justify-content: space-between;
	
	// column by default:
	@{selector} {
		// creates a new beginning of coordinates
		position: relative;
		
		// columns have equal width
		flex: 1 1 0;
		
		// collapse on mobile
		.mobile({ flex-basis: 100%; });
		
		// have margin bottom
		margin-bottom: @margin;
	}
	
	// balance .column-width-grid with empty elements at the end
	// http://stackoverflow.com/a/33212959/3748498
	> flex_balancer { .column-width-grid; }
}
.column-system { .column-system; }

// common column widths
.column-width-two { flex-grow: 2; }
.column-width-gold { flex-grow: 1.618; }
.column-width-full { flex-basis: 100%; }
.column-width-grid { flex-basis: @gridMaxWidth; .mobile({ flex-basis: @gridMaxWidth; }); }

// see above
flex_balancer {
	height: 0 !important;
	padding-top: 0 !important; padding-bottom: 0 !important;
	margin-top: 0 !important; margin-bottom: 0 !important;
	visibility: hidden !important;
}


// Forms
.form-input(@padding: 0.5rem) {
	// for sure
	display: inline-block;
	
	// box shadow
	box-shadow: 0 0 1px #AAA inset, 0 -1px 1px 0px #CCC inset;
	
	// round corners
	border-radius: 0.4em;
	
	// inherit color and set background color
	color: inherit;
	background-color: #FFF;
	
	// apply padding and border to create non-collapsing margin
	padding: calc(~"@{padding} - 2px") @padding;
	border-top: 2px solid transparent;
	border-bottom: 2px solid transparent;
	background-clip: padding-box;
	
	// when disabled make it gray
	&:disabled { color: #CCC; }
}
input:not([type="checkbox"]):not([type="radio"]):not([type="range"]),
keygen, textarea, select, button, .button { .form-input }

// iOS fix to render input coherently
input:not([type="checkbox"]):not([type="radio"]):not([type="range"]) { -webkit-appearance: button; }

// .button is aligned to center
.button { text-align: center; }

// have a cursor pointer
input[type="submit"], input[type="button"], input[type="checkbox"], input[type="radio"],
button, .button, select, label { &:not(:disabled) { cursor: pointer; } }

// resize checkbox and radio buttons
input[type="checkbox"], input[type="radio"] { width: 1rem; height: calc(~"1rem - 1px"); vertical-align: bottom; }

// proper baseline for range
input[type="range"] { min-height: 1rem; vertical-align: bottom; }

// force select height for webkit
select:not([size]) { height: 2rem; }

// textarea can resize only vertical
textarea { resize: vertical; width: 100%; }


// Base flex layout with equal left and right margins 
.doflex(@margin: @blockMargin; @selector: ~'> *') {
	display: flex;
	
	margin-left: -@margin / 2;
	margin-right: -@margin / 2;
	
	@{selector} {
		margin-left: @margin / 2;
		margin-right: @margin / 2;
	}
}


// Desktop and mobile media queries
.mobile(@rule) { @media (max-width: @mobileBreak) { @rule(); } }
.desktop(@rule) { @media (min-width: (@mobileBreak + 1px)) { @rule(); } }


// Visual aid
// append <rembased_grid> to HTML and make it visible
.rembased_grid(@alpha: 0.1) {
	display: none !important;
	position: absolute; pointer-events: none;
	
	top: 0; bottom: 0; left: 0; right: 0; z-index: 999;
	
	min-height: 100vh;
	
	@lh: unit(@rem); // line-height
	@b: unit(@rem - @offset); // baseline offset
	
	@grid: escape('<svg width="@{lh}" height="@{lh}" xmlns="http://www.w3.org/2000/svg"><rect x="0" y="0" fill="#FF0000" width="@{lh}" height="1" fill-opacity="@{alpha}"/><rect x="0" y="0" fill="#FF0000" width="1" height="@{lh}" fill-opacity="@{alpha}"/><rect x="0" y="@{b}" fill="#0000FF" width="@{lh}" height="1" fill-opacity="@{alpha}"/></svg>');
	
	background: url("data:image/svg+xml;charset=utf-8,@{grid}") left top repeat;
}
rembased_grid { .rembased_grid; }


// Toggle .alt_key on <body> to show visual aids
.alt_key {
	// show baseline grid
	rembased_grid { display: block !important; }
}
