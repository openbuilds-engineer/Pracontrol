var style = `
::content label { white-space: nowrap; }
::content input[type='number'] { width: 5rem; }
`

module.exports = class Move extends WebComponentAbstract {
  init() {
    this.renderCss(style)
    
    var p = this.new('p')
    
    var opt = { type: 'number', step: 1, value: 0 }
    var X = p.new('label', true, { textContent: 'X '}).new('input', true, opt)
    X.on('input', e => this.move({ X: X.value }))
    p.newText(' ')
    
    var Y = p.new('label', true, { textContent: 'Y '}).new('input', true, opt)
    Y.on('input', e => this.move({ Y: Y.value }))
    p.new('br')
    
    opt.step *= .1
    
    var Z = p.new('label', true, { textContent: 'Z '}).new('input', true, opt)
    Z.on('input', e => this.move({ Z: Z.value }))
    p.newText(' ')
    
    var E = p.new('label', true, { textContent: 'E '}).new('input', true, opt)
    E.on('input', e => this.move({ E: E.value }))
  }
  
  move(val) {
    var gCode = 'G1 '
    Object.keys(val).forEach(k => gCode += `${k}${val[k]} ` )
    AppEvent('serialWrite', { data: gCode, prepend: true })
  }
}
