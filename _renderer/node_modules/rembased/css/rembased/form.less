.form-input(@padding: 0.5rem) {
  // for sure
  display: inline-block;
  
  // box shadow
  box-shadow: 0 0 0 1px #999 inset, 0 -1px 1px 0px #CCC inset;
  
  // round corners
  border-radius: @padding * 0.6;
  
  // inherit color and set background color
  color: inherit;
  background-color: #FFF;
  
  // do not overflow
  max-width: 100%;
  
  // some padding and margin
  //padding: (unit(@padding) * @rem - 2) (unit(@padding) * @rem * 1.25 - 1); // fallback
  padding: calc(~'@{padding} - 2px') calc(~'@{padding} * 1.25 - 1px');
  margin-top: 2px;
  margin-bottom: 2px;
  
  // when disabled make it gray
  &:disabled { color: #CCC; }
}
input:not([type='checkbox']):not([type='radio']):not([type='range']),
keygen, textarea, select, button, .button { .form-input }

// iOS fix to render input coherently
input:not([type='checkbox']):not([type='radio']):not([type='range']) { -webkit-appearance: button; }

// .button is aligned to center and no text decoration
.button { text-align: center; text-decoration: none; }

// have a cursor pointer
input[type='submit'], input[type='button'], input[type='checkbox'], input[type='radio'],
button, .button, select, label { &:not(:disabled) { cursor: pointer; } }

// resize checkbox and radio buttons
input[type='checkbox'], input[type='radio'] { width: 1rem; height: 1rem; height: calc(~'1rem - 1px'); vertical-align: bottom; }

// proper baseline for range
input[type='range'] { min-height: 1rem; vertical-align: bottom; }

// force select height for webkit
select:not([size]) { height: calc(~'2rem - 4px'); }

// textarea can resize only vertical
textarea { resize: vertical; width: 100%; }
