'use strict'

module.exports = class ControlShortcuts extends WebComponentAbstract {
	initCallback() {
		this.deviceOk = false
		self.on('deviceOk', e => this.deviceOk = true)
		self.on('deviceNotOk', e => this.deviceOk = false)
		
		self.on('keydown', e => this.moveShortcut(e))
		defineKeyShortcut('⌘Left', 'X–10 or with ⌥ –1', 'Move control')
		defineKeyShortcut('⌘Right', 'X+10 or with ⌥ +1', 'Move control')
		defineKeyShortcut('⌘Down', 'Y–10 or with ⌥ –1', 'Move control')
		defineKeyShortcut('⌘Up', 'Y+10 or with ⌥ +1', 'Move control')
		defineKeyShortcut('⌘–', 'Z–1 or with ⌥ –0.1', 'Move control')
		defineKeyShortcut('⌘=', 'Z+1 or with ⌥ +0.1', 'Move control')
		
		self.on('keydown', e => this.keyShortcut(e))
		defineKeyShortcut('⌘E', 'Home XY', 'gCode')
		defineKeyShortcut('⌘⌥E', 'Home all', 'gCode')
		defineKeyShortcut('⌘P', 'Set position to 0', 'gCode')
		defineKeyShortcut('Esc', 'Abort moves and clean buffer', 'gCode')
		defineKeyShortcut('2xEsc', 'Emergency stop', 'gCode')
		this.firstEscKey = false
	}
	
	keyShortcut(e) {
		if(e.keyCode == 27) {
			AppEvent('serialDirectWrite', { data: this.firstEscKey ? 'M112\n' : 'M410\n' })
			AppEvent('serialDirectWrite', { data: 'M81\n' })
			AppEvent('serialClean')
			this.firstEscKey = true
			setTimeout(() => this.firstEscKey = false, 1000)
			e.preventDefault()
			return
		}
		
		if(!(e.metaKey || e.ctrlKey)) return
		
		switch(e.keyCode) {
			case 69: AppEvent('serialWrite', { data: [`G28 ${e.altKey ? '' : 'XY'}`], prepend: true }); e.preventDefault(); break
			case 80: AppEvent('serialWrite', { data: [`G92 X0 Y0 Z0`], prepend: true }); e.preventDefault(); break
		}
	}
	
	moveShortcut(e) {
		if(!(e.metaKey || e.ctrlKey)) return
		
		if(e.repeat && !this.deviceOk) return
		
		var vel = e.altKey ? 1 : 10
		
		switch(e.keyCode) {
			case 37: this.move('X', vel * -1); e.preventDefault(); break
			case 39: this.move('X', vel); e.preventDefault(); break
			
			case 38: this.move('Y', vel); e.preventDefault(); break
			case 40: this.move('Y', vel * -1); e.preventDefault(); break
			
			case 187: this.move('Z', vel * .1); e.preventDefault(); break
			case 189: this.move('Z', vel * -.1); e.preventDefault(); break
		}
	}
	
	move(axis, vel) {
		AppEvent('serialWrite', { data: ['G91', `G0 ${axis} ${vel}`, 'G90', 'M400'], prepend: true })
	}
}
