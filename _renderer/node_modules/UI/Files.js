module.exports = class Files extends WebComponentAbstract {
  init() {
    setImmediate(() => defineEvent('openFile', 'Window emits openFile when file is dragged into app', 'Core', 'e.dataTransfer.files'))
    self.on('drop', e => this.fileDrop(e))
    self.on('dragover', e => this.dragHover(e))
    self.on('dragleave', e => this.dragEnd(e))
    
    setImmediate(() => defineShortcut('âŒ˜O', 'Open file', 'General'))
    self.on('keydown', e => (e.metaKey || e.ctrlKey) && e.key == 'o' && this.openDialog())
  }
  
  openDialog() {
    var prop = { properties: ['openFile', 'openDirectory', 'multiSelections'] }
    var files = require('electron').remote.dialog.showOpenDialog(prop)
    if(!files) return
    self.emit('openFile', files.map(path => { return { path } }))
  }
  
  dragHover(e) {
    e.dataTransfer.dropEffect = 'copy'
    document.body.classList.add('drag')
    e.preventDefault()
  }
  
  dragEnd(e) {
    document.body.classList.remove('drag')
    e.preventDefault()
  }
  
  fileDrop(e) {
    this.dragEnd(e)
    if(!e.dataTransfer.files.length) return
    self.emit('openFile', e.dataTransfer.files.map(f => { return { path: f.path } }))
  }
}
