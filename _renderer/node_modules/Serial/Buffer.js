module.exports = class SerialBuffer extends WebComponentAbstract {
  init() {
    this.new(require('./ResetCheck'))
    this.new(require('./Busy'))
    
    this.buffer = []
    this.deviceOk = false
    self.on('deviceOk', e => this.deviceOk = true)
    self.on('deviceBusy', e => this.deviceOk = false)
    
    defineEvent('serialWrite', 'Send data to serial buffer', 'Serial buffer', `{ data: '' or [], prepend: false }`)
    self.on('serialWrite', e => this.send(e.detail.data, e.detail.prepend))
    
    defineEvent('serialClean', 'Clean serial buffer', 'Serial buffer')
    self.on('serialClean', e => { this.buffer = []; self.emit('bufferChange'); })
    
    // sending buffer
    self.on('deviceOk', e => setImmediate(e => this.sendBuffer()))
    
    setImmediate(() => self.emit('bufferChange'))
  }
  
  send(data, prepend) {
    if(!Array.isArray(data)) data = String(data).split('\n')
    
    if(prepend) data.reverse()
    
    data.forEach(i => {
      if(!i) return
      prepend ? this.buffer.unshift(i + '\n') : this.buffer.push(i + '\n')
    })
    
    self.emit('bufferChange')
    this.sendBuffer()
  }
  
  sendBuffer() {
    if(!this.deviceOk) return
    
    var data = this.buffer.shift()
    if(!data) return
    
    self.emit('bufferChange')
    self.emit('serialDirectWrite', { data })
  }
}
