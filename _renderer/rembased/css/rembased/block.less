.rembased-block-defaults() {
  // define block elements
  .block-elem(@rule) { p, h1, h2, h3, ul, ol, table, pre, iframe { @rule(); } }
}
.rembased-block-defaults();


// set margin bottom for block elements
.block-elem({ margin-bottom: 1rem; });


// headings
h1 { font-size: 1.5em; line-height: 2rem; }
h2 { font-size: 1.3em; }
h3 { font-size: 1.1em; }

// kerning pairs and ligatures
// http://aestheticallyloyal.com/public/optimize-legibility/
h1, h2, h3 { text-rendering: optimizeLegibility; }


// bullet lists
.list(@padding: 1rem) {
  // indent
  padding-left: @padding;
  
  // no margin bottom in nested lists
  ul, ol { margin-bottom: 0; }
  
  // p followed by .list has no margin in between
  p + & { margin-top: -1rem; }
}
ul, ol {
  // when list is not plain do not show bullets
  &[class], &[id] { list-style-type: none; }
  
  // when .list is plain (with no id or class) apply .list
  &:not([class]):not([id]) { .list; }
}


// horizontal line
.hr(@w: 1px; @c: #000) {
  display: block; clear: both; height: 1rem;
  
  // we need line at specific height so use image
  @img: escape('<svg width="1" height="@{w}" xmlns="http://www.w3.org/2000/svg"><rect x="0" y="0" fill="@{c}" width="1" height="@{w}"/></svg>');
  background: url('data:image/svg+xml;charset=utf-8,@{img}') center calc(~'1rem / 2 - @{w}') repeat-x;
}
hr { .hr; }


// keyboard input
.kbd() { padding: 0 .2em; color: #fff; background-color: #333; border-radius: .25em; }
kbd:not(:empty) { .kbd; }
